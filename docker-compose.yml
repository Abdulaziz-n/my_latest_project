version: "3.8"

networks:
    nginx_network:
        external: true
    internal:

services:
    uzmobile-app:
        container_name: uzmobile-app
        working_dir: /app
        image: adhocore/phpfpm:8.1
        restart: always
        networks:
            - internal
            - nginx_network
        volumes:
            - '.:/app'
            - './docker/php/overrides.ini:/etc/php/8.1/fpm/conf.d/99-overrides.ini'
        depends_on:
            - uzmobile-database
    uzmobile-database:
        image: postgres:11.1-alpine
        restart: always
        container_name: uzmobile-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            - POSTGRES_USER=oauth_user
            - POSTGRES_PASSWORD=UYaRCA7emd2szH47
            - POSTGRES_DB=users
        volumes:
            - .:/app
            - ./uzmobile-database:/var/lib/postgresql/data
        ports:
            - '8001:5432'
    information-database:
        image: postgres:11.1-alpine
        restart: always
        container_name: information-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            - POSTGRES_USER=information_user
            - POSTGRES_PASSWORD=UYaRCA7emd2szH47
            - POSTGRES_DB=informations-db
        volumes:
            - .:/app
            - ./information-database:/var/lib/postgresql/data
        ports:
            - '8003:5432'
    gifts-database:
        image: postgres:11.1-alpine
        restart: always
        container_name: gifts-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            - POSTGRES_USER=gifts_user
            - POSTGRES_PASSWORD=UYaRCA7emd2szH47
            - POSTGRES_DB=gifts-db
        volumes:
            - .:/app
            - ./gifts-database:/var/lib/postgresql/data
        ports:
            - '8004:5432'
    levels-database:
        image: postgres:11.1-alpine
        restart: always
        container_name: levels-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            - POSTGRES_USER=levels_user
            - POSTGRES_PASSWORD=UYaRCA7emd2szH47
            - POSTGRES_DB=levels-db
        volumes:
            - .:/app
            - ./levels-database:/var/lib/postgresql/data
        ports:
            - '8005:5432'
    users-database:
        image: postgres:11.1-alpine
        restart: always
        container_name: users-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=UYaRCA7emd2szH47
            - POSTGRES_DB=users-db
        volumes:
            - .:/app
            - ./users-database:/var/lib/postgresql/data
        ports:
            - '8006:5432'
    activity-log-database:
        image: mongo:5.0.6
        restart: always
        container_name: activity-log-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - .:/app
            - ./activity-log-database:/var/lib/mongo/data
        ports:
            - '8007:27017'
    users-gifts-database:
        image: mongo:5.0.6
        restart: always
        container_name: users-gifts-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - .:/app
            - ./users-gifts-database:/var/lib/mongo/data
        ports:
            - '8008:27017'
    levels-users-database:
        image: mongo:5.0.6
        restart: always
        container_name: levels-users-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - .:/app
            - ./levels-users-database:/var/lib/mongo/data
        ports:
            - '8009:27017'
    transactions-database:
        image: mongo:5.0.6
        restart: always
        container_name: transactions-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - .:/app
            - ./transactions-database:/var/lib/mongo/data
        ports:
            - '8010:27017'
    charges-database:
        image: mongo:5.0.6
        restart: always
        container_name: charges-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - .:/app
            - ./charges-database:/var/lib/mongo/data
        ports:
            - '8011:27017'
    charges-premium-database:
        image: mongo:5.0.6
        restart: always
        container_name: charges-premium-database
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - .:/app
            - ./charges-premium-database:/var/lib/mongo/data
        ports:
            - '8012:27017'
    questionnaire-db:
        image: postgres:11.1-alpine
        restart: always
        container_name: questionnaire-db
        working_dir: /app
        networks:
            - internal
            - nginx_network
        environment:
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=questionnaire-db
        volumes:
            - .:/app
            - ./questionnaire-db:/var/lib/postgresql/data
        ports:
            - '8013:5432'
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        environment:
            - RABBITMQ_DEFAULT_USER=user
            - RABBITMQ_DEFAULT_PASS=password
        ports:
            - '5672:5672'
            - '15672:15672'
        volumes:
            - ./rabbitmq/:/var/lib/rabbitmq/
            - ./rabbitmq/log/:/var/log/rabbitmq
        networks:
            - internal
            - nginx_network
    uzmobile-nginx:
        image: nginx:alpine
        container_name: 'uzmobile-nginx'
        working_dir: /app
        restart: always
        networks:
            - internal
            - nginx_network
        ports:
            - "9002:80"
        volumes:
            - .:/app
            - ./docker/nginx/oauth.conf:/etc/nginx/conf.d/default.conf
    uzmobile-composer:
        image: composer:latest
        container_name: uzmobile-composer
        working_dir: /app
        command: update --ignore-platform-reqs
        volumes:
            - .:/app
        restart: on-failure
        depends_on:
            - uzmobile-app
volumes:
    uzmobile-database:
        driver: local
    information-database:
        driver: local
    gifts-database:
        driver: local
    levels-database:
        driver: local
    users-database:
        driver: local
    activity-log-database:
        driver: local
    users-gifts-database:
        driver: local
    levels-users-database:
        driver: local
    transactions-database:
        driver: local
    rabbitmq:
        driver: local
    charges-database:
        driver: local
    charges-premium-database:
        driver: local
    questionnaire-db:
        driver: local
